
(c / chapter
  :mod 1)

(s / see-01
      :ARG0 (i / i)
      :ARG1 (p / picture
            :mod (m / magnificent)
            :location (b2 / book :wiki -
                  :name (n / name :op1 "True" :op2 "Stories" :op3 "from" :op4 "Nature")
                  :topic (f / forest
                        :mod (p2 / primeval))))
      :mod (o / once)
      :time (a / age-01
            :ARG1 i
            :ARG2 (t / temporal-quantity :quant 6
                  :unit (y / year))))

(p / picture
  :domain (i / it)
  :topic (b2 / boa
           :mod (c2 / constrictor)
           :ARG0-of (s / swallow-01
                      :ARG1 (a / animal))))

(b / be-located-at-91
      :ARG1 (t2 / thing
            :ARG2-of (c / copy-01
                  :ARG1 (p / picture
                        :ARG1-of (d / draw-01))))
      :ARG2 (h / here))

(s2 / say-01
      :ARG0 (b2 / book)
      :ARG1 (s / swallow-01
            :ARG0 (b / boa
                  :mod (c / constrictor))
            :ARG1 (p / prey
                  :mod (w / whole)
                  :poss b)
            :manner (c2 / chew-01 :polarity -
                  :ARG0 b
                  :ARG1 p)))

(a / and
      :op1 (p / possible-01 :polarity -
            :ARG1 (m / move-01
                  :ARG0 (t / they)
                  :time (a2 / after
                        :op1 (t3 / that))))
      :op2 (s / sleep-01
            :ARG0 t
            :duration (t2 / temporal-quantity :quant 6
                  :unit (m2 / month)
                  :ARG1-of (n / need-01
                        :ARG0 t
                        :purpose (d / digest-01
                              :ARG0 t)))))

(p / ponder-01
      :ARG0 (i / i)
      :ARG1 (a / adventure
            :location (j / jungle))
      :ARG1-of (d / deep-02)
      :time (t / then))

(a2 / and
      :op2 (s / succeed-01
            :ARG0 (i / i)
            :ARG1 (m / make-01
                  :ARG0 i
                  :ARG1 (p2 / picture
                        :ARG1-of (d / draw-01
                              :ARG0 i
                              :ord (o / ordinal-entity :value 1))))
            :time (a / after
                  :op1 (w / work-01
                        :ARG0 i
                        :instrument (p / pencil
                              :mod (c / color))
                        :mod (s2 / some)))))

(p / picture :wiki -
      :name (n2 / name :op1 "Drawing" :op2 "Number" :op3 "One")
      :poss (i / i))

(l / look-02
      :ARG0 (i / it)
      :ARG1 (t / this))

(a / and
   :op1 (s / show-01
            :ARG0 (i / i)
            :ARG1 (m / masterpiece
                  :poss i)
            :ARG2 (g / grown-up))
   :op2 (a2 / ask-01
            :ARG0 i
            :ARG1 (f / frighten-01 :mode interrogative
                  :ARG0 (p / picture
                        :ARG1-of (d / draw-01))
                  :ARG1 g)
            :ARG2 g))

(c / contrast-01
  :ARG2 (a / answer-01
          :ARG0 (t / they)
          :ARG2 (f / frighten-01
                  :mode interrogative)))

(f / frighten-01
  :ARG0 (h / hat)
  :ARG1 (o / one
          :mod (a / any))
  :ARG1-of (c / cause-01
             :ARG0 (a2 / amr-unknown)))

(p / picture-01 :polarity -
      :ARG0 (p2 / picture
            :ARG1-of (d / draw-01
                  :ARG0 (i / i)))
      :ARG1 (h / hat))

(p / picture-01
  :ARG0 (i / it)
  :ARG1 (b2 / boa
          :mod (c / constrictor)
          :ARG0-of (d / digest-01
                     :ARG1 (e / elephant))))

(c / contrast-01
      :ARG2 (a2 / and
            :op1 (d3 / draw-01
                  :ARG0 (i / i)
                  :ARG1 (p2 / picture
                        :mod (a / another))
                  :ARG1-of (c3 / cause-01
                        :ARG0 (p3 / possible-01 :polarity -
                              :ARG1 (u / understand-01
                                    :ARG0 (g / grown-up)
                                    :ARG1 (i2 / it)))))
            :op2 (d / draw-01
                  :ARG0 i
                  :ARG1 (i3 / inside
                        :part-of (b2 / boa
                              :mod (c4 / constrictor)))
                  :purpose (p / possible-01
                        :ARG1 (s / see-01
                              :ARG0 g
                              :ARG1 (i4 / it)
                              :ARG1-of (c2 / clear-06))))))

(n / need-01
      :ARG0 (t / they)
      :ARG1 (e / explain-01)
      :time (a / always))

(l / look-02
     :ARG0 (p / picture :wiki - :name (n / name :op1 "Drawing" :op2 "Number" :op3 "Two")
           :poss i)
     :ARG1 (t2 / this))

(r / respond-01
     :ARG0 (g / grown-up)
     :ARG1 (i / i)
     :ARG2 (a / advise-01
           :ARG0 g
           :ARG1 i
           :ARG2 (a3 / and
                 :op1 (l2 / lay-01
                      :ARG0 i
                      :ARG1 (p2 / picture
                            :ARG1-of (d2 / draw-01
                                     :ARG0 i)
                            :topic (b2 / boa
                                   :mod (c2 / constrictor)
                                   :mod (o / or
                                        :op1 (i2 / inside)
                                        :op2 (o2 / outside))))
                       :ARG2 (a2 / aside))
          	  :op2 (d3 / devote-01
              	       :ARG0 i
              	       :ARG1 i
              	       :ARG2 (a4 / and
                             :op1 (g2 / geography)
                             :op2 (h / history)
                   	     :op3 (a5 / arithmetic)
                    	     :op4 (g3 / grammar))
              	       :ARG1-of (i4 / instead-of-91
                             :ARG2 d2))))
            :time (t4 / time
                 :mod (t5 / this))))

(c2 / cause-01
      :ARG0 (t2 / that)
      :ARG1 (g / give-up-07
            :ARG0 (i / i)
            :ARG1 (c / career
                  :mod (m / magnificent)
                  :topic (p / person
                        :ARG0-of (p2 / paint-02)))
            :time (a / age-01
                  :ARG1 i
                  :ARG2 (t / temporal-quantity :quant 6
                        :unit (y / year)))))

(d / dishearten-01
      :ARG0 (f / fail-01
            :ARG1 (a / and
                  :op1 (p / picture :wiki -
                        :name (n / name :op1 "Drawing" :op2 "Number" :op3 "One"))
                  :op2 (p2 / picture :wiki -
                        :name (n2 / name :op1 "Drawing" :op2 "Number" :op3 "Two"))
                  :poss i))
      :ARG1 (i / i))

(a / and
      :op1 (u / understand-01 :polarity -
            :ARG0 (g / grown-up)
            :ARG1 (a3 / anything)
            :time (e2 / ever)
            :mod (b / by-oneself))
      :op2 (t / tiresome
            :domain (e / explain-01
                  :ARG0 (c / child)
                  :ARG1 (t2 / thing)
                  :ARG2 g
                  :time (a4 / always)
                  :mod (f / forever))))

(c2 / cause-01
  :ARG1 (a / and
          :op1 (c / choose-01
                 :ARG0 (i / i)
                 :ARG1 (p / profession
                         :mod (a2 / another)))
          :op2 (l / learn-01
                 :ARG0 i
                 :ARG1 (p2 / pilot-01
                         :ARG0 i
                         :ARG1 (a3 / airplane)))))

(f / fly-01
     :ARG0 i
     :location (o / over
               :op1 (p2 / part
                    :part-of (w / world))))

(a / and
      :op1 (u / useful-05
              :ARG0 (i / i)
              :ARG1 (g / geography)
              :degree (v / very)))

(p / possible-01
      :ARG1 (d / distinguish-01
            :ARG0 (i / i)
            :ARG1 (c / country :wiki "China"
                  :name (n / name :op1 "China"))
            :ARG2 (s / state :wiki "Arizona"
                  :name (n2 / name :op1 "Arizona"))
            :manner (g / glance-01
                  :ARG0 i)))

(v / value-02
      :ARG1 (k / knowledge
            :mod (s / such))
      :condition (g / get-03
            :ARG1 (o / one)
            :ARG2 (l / lost
                  :time (d / date-entity :dayperiod (n / night)))))

(e / encounter-01
  :ARG0 (i / i)
  :ARG1 (p / person
          :quant (m2 / many
                   :mod (g2 / great))
          :ARG1-of (c / concern-01
                     :ARG0 (m3 / matter
                             :mod (c2 / consequence))))
  :quant (m / many
           :mod (g / great))
  :time (c3 / course
          :poss (l / life
                  :mod (t / this))))

(l / live-01
      :ARG0 (i / i)
      :mod (d / deal
            :mod (g2 / great))
      :location (a / among
            :op1 (g / grown-up)))

(s / see-01
      :ARG0 (i / i)
      :ARG1 (t / they)
      :ARG1-of (c / close-10
            :ARG2 (a / at-hand))
      :ARG2-of (i2 / intimate-02
            :ARG1 i))

(a / and
      :op2 (i / improve-01 :polarity -
            :ARG0 (t / that)
            :ARG1 (t3 / thing
                  :ARG1-of (o2 / opine-01
                        :ARG0 (i2 / i)
                        :topic (t2 / they)))
            :degree (m2 / much)))

(t / try-01
      :ARG0 (i / i)
      :ARG1 (e / experiment-01
            :ARG1 (s / show-01
                  :ARG1 (p2 / picture :wiki - :name (n / name :op1 "Drawing" :op2 "Number" :op3 "One"))
                  :ARG2 p
                  :ARG1-of (k / keep-01
                        :ARG0 i
                        :time (a / always))))
      :time (m / meet-02
            :ARG0 i
            :ARG1 (p / person
                  :ARG1-of (i2 / include-91
                        :ARG2 (t3 / they))
                  :ARG0-of (s3 / see-01
                        :ARG1-of (c / clear-08)
                        :ARG1-of (s4 / seem-01
                              :ARG2 i)))
            :mod (a2 / any)))

(t / try-01
      :ARG0 (i / i)
      :ARG1 (f / find-out-03
            :ARG0 i
            :ARG1 (u2 / understand-01 :mode interrogative
                  :ARG0 (p / person
                        :mod (t2 / this))
                  :ARG1-of (t3 / true-01))))

(c / contrast-01
  :ARG2 (s / say-01
          :ARG0 (o / or
                  :op1 (h / he)
                  :op2 (s2 / she))
          :ARG1 (h2 / hat
                  :domain (t / that))
          :time (a / always)))

(t / talk-01
  :ARG0 (i / i)
  :ARG1 (o / or
          :op1 (b / boa
                 :mod (c2 / constrictor))
          :op2 (f / forest
                 :mod (p2 / primeval))
          :op3 (s / star))
  :ARG2 (p / person
          :mod (t2 / that))
  :time (e / ever)
  :polarity -)

(b / bring-01
      :ARG0 (i / i)
      :ARG1 i
      :ARG2 (l / level
            :poss (h / he))
      :ARG3 (d / down))

(t / talk-01
  :ARG0 (i / i)
  :ARG1 (a / and
          :op1 (b / bridge)
          :op2 (g / golf)
          :op3 (p / politics)
          :op4 (n2 / necktie))
  :ARG2 (h / he))

(a / and
      :op2 (p / please-01
            :ARG0 (m / meet-02
                  :ARG0 g
                  :ARG1 (m2 / man
                        :ARG2-of (s / sense-02
                              :degree (s2 / such))))
            :ARG1 (g / grown-up)
            :degree (g2 / great)))

(c / chapter
  :mod 2)

(c / cause-01
      :ARG1 (l / live-01
            :ARG0 (i / i
                  :ARG0-of (t3 / talk-01 :polarity -
                        :ARG2 (a5 / anyone)
                        :ARG1-of (r / real-04)))
            :ARG1 (l2 / life
                  :poss i)
            :manner (a / alone)
            :duration (u / until
                  :op1 (h / have-06
                        :ARG0 i
                        :ARG1 (a3 / accident
                              :mod (p / plane))
                        :location (d / desert :wiki "Sahara" :name (n / name :op1 "Desert" :op2 "of" :op3 "Sahara"))
                        :time (b / before
                              :op1 (n2 / now)
                              :quant (t2 / temporal-quantity :quant 6
                                    :unit (y / year)))))))

(b / break-01
      :ARG1 (s / something
            :location (e / engine
                  :poss (i / i))))

(a / and
  :op2 (c / cause-01
         :ARG0 (h / have-03
                 :ARG0 i
                 :ARG1 (o / or
                         :op1 (m / mechanic)
                         :op2 (p / passenger))
                 :accompanier (i / i)
                 :polarity -)
         :ARG1 (a2 / attempt-01
                 :ARG0 i
                 :ARG1 (r / repair-01
                         :mod (d / difficult))
                 :mod (a3 / alone
                        :degree (a4 / all)))))

(s / sleep-01
      :ARG0 (i / i)
      :location (s2 / sand)
      :time (d2 / date-entity
            :dayperiod (n / night)
            :ord (o / ordinal-entity :value 1))
      :location (r / relative-position
            :op1 (p / place
                  :ARG1-of (i2 / inhabit-01
                        :ARG0 (h / human))
                  :mod (a2 / any))
            :quant (d / distance-quantity :quant 1000
                  :unit (m / mile))
            :direction (a3 / away)))

(i / isolate-01
      :ARG1 (i2 / i)
      :degree (m / more)
      :compared-to (p / person
            :ARG0-of (s / sail-01)
            :ARG1-of (s2 / shipwreck-01)
            :location (r / raft
                  :location (o / ocean
                        :part (m2 / middle)))))

(c / cause-01
      :ARG1 (p / possible-01
            :ARG1 (i2 / imagine-01
                  :ARG0 (y / you)
                  :ARG1 (a / amaze-01
                        :ARG1 (i / i)
                        :time (s / sunrise
                              :time-of (w / wake-01
                                    :ARG0 (v / voice
                                          :mod (o / odd)
                                          :mod (l / little))
                                    :ARG1 i))))))

(s / say-01
      :ARG0 (i / it)
      :ARG1 (d / draw-01 :mode imperative :polite +
            :ARG0 (y2 / you)
            :ARG1 (s2 / sheep)
            :ARG2 (i2 / i)))

(s / string-entity :value "what")

(d / draw-01
  :ARG0 (y / you)
  :ARG1 (s / sheep)
  :ARG2 (i / i)
  :mode imperative)

(j / jump-03
      :ARG0 (i / i
            :mod (t / thunderstruck
                  :ARG1-of (c / complete-02)))
      :destination (f / foot
            :part-of i))

(b / blink-01
      :ARG0 (i / i)
      :ARG1 (e / eye
            :part-of i)
      :ARG1-of (h / hard-04))

(l / look-01
      :ARG0 (i / i)
      :direction (a / around
            :op1 i
            :mod (a2 / all))
      :manner (c / careful))

(a / and
      :op2 (s / see-01
            :ARG0 (i / i)
            :ARG1 (p / person
                  :mod (s2 / small)
                  :mod (e / extraordinary
                        :degree (m / most))
                  :ARG1-of (s3 / stand-01
                        :ARG2 (t / there))
                  :ARG0-of (e2 / examine-01
                        :ARG1 i
                        :ARG2-of (s4 / serious-01
                              :degree (g / great))))))